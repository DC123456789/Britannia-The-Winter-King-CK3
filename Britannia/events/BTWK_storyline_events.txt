namespace = BTWK_story_event

################################
# THE WINTER KING STORY EVENTS #
################################

# CURRENTLY JUST PORTS FROM CKII. AMENDMENTS TO MAKE THEM CLOSER TO THE STORY SHOULD BE COMPLETED AS REQUIRED.

################################

### UTHER'S DEATH and ARTHUR'S RETURN ###
# BTWK_story_event.0001 = Autumn 480 AD. Uther Pendragon health is worsening...
# BTWK_story_event.0002 = January 481 AD. If Uther still alive, he becomes incapable...
# BTWK_story_event.0003 = Uther Pendragon is dead. Arthur is back to Dumnonia. News spreading...
# BTWK_story_event.0004 = Everyone except Mordred get this...
# BTWK_story_event.0005 = Event for King Mordred
# BTWK_story_event.0006 = Event for Arthur ---IF PLAYER TAG SWITCHES---

### ARTHUR REGENCY CHAIN ###
# BTWK_story_event.0007 = Regent decides to give power to Arthur
# BTWK_story_event.0008 = Arthur accepts regency
# BTWK_story_event.0009 = Notify Mordred
# BTWK_story_event.0010 = Notify other vassals
# BTWK_story_event.0011 = Set Flag

############## UTHER'S DEATH and ARTHUR'S RETURN ##############

BTWK_story_event.0001 = {  # Triggered by on_game_start on_action incase Uther's pneumonia is cured. Possibly make it non-hidden also. "Second bout of illness..."
	type = character_event
	hidden = yes
	
	trigger = {
		character:1 = {		
			NOT = { has_character_flag = utherillness }
			is_alive = yes
			
		}
	}
	immediate = {
		character:1 = {
			add_character_flag = utherillness
			add_trait = pneumonic 
		}
	}
}

BTWK_story_event.0002 = {  # Should probably change this to make it non-hidden & a unique end of life event for Uther.

	type = character_event
	hidden = yes

	trigger = {
		character:1 = {
			has_character_flag = utherillness
			is_alive = yes
			NOT = { has_character_flag = utherincapable }
		}
	}
	
	immediate = {
		character:1 = {
			add_trait = incapable
			add_character_flag = utherincapable
		}
	}
}

BTWK_story_event.0003 = {  # Should be triggered by on_death with Uther. Effects are now hidden as Arthur will be unplayable until this event fires.

	type = character_event
	hidden = yes
	
	immediate = {
		# This doesn't work #
		scope:landed_title = {
			every_claimant = {
				limit = { 
					has_claim_on = title:k_dumnonia
					NOT = {dynasty = 3} # All Corneus still hold claims on Dumnonia if that isn't wanted. Also doesn't remove claims from any other claimants.
				}
			remove_claim = title:k_dumnonia
			}
		}
		####################
		
		character:3 = {
			# Will need to add liege change when King Ban added, OR, destroy Arthur's Company, then change employer of all chars in Arthur's Company.
			add_character_flag = arthur_pendragon
			save_scope_as = arthur_pendragon
			# The "get_titles" below are flagging as errors in Visual Studio. I tried to set up a create_title_and_vassal_change, but another error flagged telling
			# me "every_de_jure_county" is unexpected in "immediate". The get_titles work, so given they only happen once, is it safe to leave them as is? 
			get_title = title:c_durnovaria
			get_title = title:c_dunum 
			get_title = title:c_velox 
			get_title = title:d_centdumnonia
			give_nickname = nick_pendragon
		}
		
#### Add destroy "Arthur's Company" section when the title is implemented ####

		character:5 = { # Unique Event for Mordred
			add_character_flag = mordred_pengdragon
			save_scope_as = mordred_pendragon
			trigger_event = {
				id = BTWK_story_event.0005
				days = 5
			}
		}
#### Do we really need to fire Mordred's council like in CK2??? It's whoever was in power as selected by Uther - don't see how a baby is going to control who is in the council. ####	
		
		every_ruler = {
			limit = {
				NOT = { has_character_flag = mordred_pendragon }
				NOT = { has_character_flag = arthur_pendragon }
#				capital_county = {
#					region = world_britannia
#					NOT = { region = world_britannia_cymry_henogledd }
#				}
			}
			
			trigger_event = { # Event for everyone else
				id = BTWK_story_event.0004
				days = 5
			}
		}
	}
}

BTWK_story_event.0004 = {
	type = character_event
	title = BTWK_story_event.0004.t
	desc = BTWK_story_event.0004.desc
# More fitting music cue/sounds needed
	theme = dynasty
	left_portrait = {
		character = character:3
		animation = personality_honorable
	}
	lower_right_portrait = {
		character = character:1
		animation = no
	}
	lower_center_portrait = {
		character = character:5
		animation = no
	}
# All events fire correctly for each character type in question

# Dumnonians	
	option = { 												
		name = BTWK_story_event.0004.a
		trigger = {
			top_liege = { has_title = title:k_dumnonia }
			NOT = {culture = {has_cultural_pillar = heritage_west_germanic }}
		}
	}	

# Non-Dumnonian Brythons & Imperials.
	option = { 												
		name = BTWK_story_event.0004.b
		trigger = {	
			culture = {
				OR = {
					has_cultural_pillar = heritage_brythonic
					has_cultural_pillar = heritage_latin
				}
			}
			NOT = { top_liege = { has_title = title:k_dumnonia } }
		}
	}

# Is a North Sea Germanic.
	option = {  											
		name = BTWK_story_event.0004.c
		trigger = {
			culture = { has_cultural_pillar = heritage_west_germanic }
		}
	}
	

# Doesn't have cultural pillars Brythonic, Latin & North Sea Germanic, and NOT located in key "Britannia" regions.
	option = {  											
		name = BTWK_story_event.0004.d
		trigger = {
			culture = {
				NOR = {
					has_cultural_pillar = heritage_brythonic 
					has_cultural_pillar = heritage_latin
					has_cultural_pillar = heritage_west_germanic
				}
			}
			NOT = {top_liege = { has_title = title:k_dumnonia }}
		}
	}
}


BTWK_story_event.0005 = {
	type = character_event
	title = BTWK_story_event.0005.t
	desc = BTWK_story_event.0005.desc
	theme = dynasty
	# More fitting sound & music cue
	left_portrait = {
		character = character:3
		animation = scheme
	}
	lower_right_portrait = {
		character = character:1
		animation = no
	}
	lower_center_portrait = {
		character = character:5
		animation = no
	}

	option = {  # Continue to play as Mordred.
		name = BTWK_story_event.0005.a
	}
	option = {  # Continue as Arthur.
		name = BTWK_story_event.0005.b
		trigger = {
			is_ai = no
		}

		# Doesn't work correctly #
		character:3 = {
			trigger_event = {
				id = BTWK_story_event.0006
				days = 1
			}
		}
		##########################

		set_player_character = character:3
		# Add on_action to trigger Arthur introduction event			
	}
}

BTWK_story_event.0006 = {
	type = character_event
	title = BTWK_story_event.0006.t
	desc = BTWK_story_event.0006.desc
	theme = dynasty

	right_portrait = {
		character = root
		animation = personality_honorable
	}
	trigger = {
		this = character:3
		is_ai = no
	}
	option = {
		name = BTWK_story_event.0006.a
	}
}

############## ARTHUR REGENCY CHAIN ##############
# WILL NOT FIRE - DECISION NEEDS TO BE MADE
BTWK_story_event.0007 = {	# Regent decides to give power to Arthur
	type = character_event
	title = BTWK_story_event.0007.t
	theme = dynasty
	
	desc = {
		desc = BTWK_story_event.0007.desc
		first_valid = {
			triggered_desc = { 
				trigger = {
					NOT = { has_character_flag = arthur_regent }
				}
				desc = BTWK_story_event.0007.desc_arthur_regent_1

			}
			triggered_desc = {
				trigger = {
					has_character_flag = arthur_regent
				}
				desc = BTWK_story_event.0007.desc_arthur_regent_2
			}

		}
	}
	

	trigger = {
		# NOT Arthur, NOT Mordred, Dumnonia has active diarchy, diarch/regent = ROOT. Arthur has returned & has NOT refused regent previously.
		NOT = {
			this = character:3
			this = character:5
		}
		# May have teething troubles with regency triggers. No documentation on the Wiki nor CK3 Co-Op.
		character:5 = {
			has_active_diarchy = yes
			diarch = ROOT
		}
		character:3 = {

		}
		}
		
	
	
	immediate = {
		add_character_flag = old_dumnonia_regent
	}
	
	option = {
		name = BTWK_story_event.0007.a
		ai_chance = {
			base = 100
		}
#		character:3 = {
#			trigger_event = { 
#				id = BTWK_story_event.0008
#				days = 1 
#			}
#		}
	}
	
	option = {
		name = BTWK_story_event.0007.b
		ai_chance = {
			base = 0
		}
		add_character_flag = refused_arthur_regent
	}
}