# Checks if a title has a certain flag/variable
# If the [flag]_pretend scope is set to the scoped title, then the flag is considered set even if it isn't 
# actually - this is used for tooltip purposes
# Same with [flag]_ignore scope, which ignores the flag even if it is set
title_has_de_jure_variable_trigger = {
	OR = {
		has_variable = $FLAG$
		scope:$FLAG$_pretend ?= this
	}
	NOT = {
		scope:$FLAG$_ignore ?= this
	}
}

# Same as title_has_de_jure_variable_trigger, but is only true for tooltip purposes, not for the actual variales
# I.e. it only checks if the [flag]_pretend scope is set to the scoped title (and the [flag]_ignore scope is not)
title_has_de_jure_variable_tooltip_trigger = {
	scope:$FLAG$_pretend ?= this
	NOT = {
		scope:$FLAG$_ignore ?= this
	}
}

check_kingdom_region_de_jure_liege_trigger = {
	has_variable = kingdom_region
	this.var:kingdom_region.var:kingdom_region_empire ?= $DE_JURE_LIEGE$
}

# DUCHY is the Anglo-Saxon duchy to check if the capital is in
is_capital_in_anglo_saxon_duchy_trigger = {
	title_capital_county = {
		OR = {
			AND = {
				this.var:anglo_saxon_duchy ?= $DUCHY$
				OR = {
					NOT = { has_variable = anglo_saxon_duchy_dependency }
					this.var:anglo_saxon_duchy_dependency = { has_variable = title_created_de_jure }
				}
			}
			AND = {
				this.var:secondary_anglo_saxon_duchy ?= $DUCHY$
				OR = {
					NOT = { has_variable = secondary_anglo_saxon_duchy_dependency }
					this.var:secondary_anglo_saxon_duchy_dependency = { has_variable = title_created_de_jure }
				}
			}
		}
	}
}

is_capital_in_roman_duchy_trigger = {
	title_capital_county = {
		this.var:roman_duchy ?= $DUCHY$
	}
}

control_region_fraction_trigger = {
	trigger_if = {
		limit = { is_ai = no }
		save_temporary_scope_as = current_scope
		save_temporary_scope_value_as = { 
			name = percent_required 
			value = {
				value = $FRACTION_REQUIRED$
				multiply = 100
			}
		}
		save_temporary_scope_value_as = { 
			name = region_total_counties 
			value = {
				value = 0
				every_county_in_region = {
					region = $REGION$
					add = 1
				}
			}
		}
		save_temporary_scope_value_as = { 
			name = region_required_counties 
			value = {
				value = scope:region_total_counties
				multiply = $FRACTION_REQUIRED$
				ceiling = yes
			}
		}
		save_temporary_scope_value_as = { 
			name = region_controlled_counties
			value = {
				value = 0
				every_county_in_region = {
					region = $REGION$
					limit = { scope:current_scope = { completely_controls = prev } }
					add = 1
				}
			}
		}
		save_temporary_scope_value_as = { 
			name = region_controlled_percent
			value = {
				value = scope:region_controlled_counties
				divide = scope:region_total_counties
				multiply = 100
			}
		}
		save_temporary_scope_value_as = { 
			name = region_name 
			value = flag:$REGION$
		}
		custom_tooltip = {
			text = control_region_fraction_trigger_tt
			any_county_in_region = {
				percent >= $FRACTION_REQUIRED$
				region = $REGION$
				root = { completely_controls = prev }
			}
		}
	}
	trigger_if = {		# Avoid having to calculate all the variables unless necessary (does this actually matter?)
		limit = { is_ai = yes }
		custom_tooltip = {
			text = control_region_fraction_trigger_tt
			any_county_in_region = {
				percent >= $FRACTION_REQUIRED$
				region = $REGION$
				root = { completely_controls = prev }
			}
		}
	}
}

# TODO Allow for Roman characters, but only if they are under the empire
can_create_briton_kingdom_trigger = {
	is_celtic_culture_trigger = yes
}

germanic_controlled_trigger = {
	custom_description = {
		text = germanic_controlled_trigger
		holder.top_liege = { can_create_germanic_title_culture_trigger = yes }
	}
}

roman_controlled_trigger = {
	custom_description = {
		text = roman_controlled_trigger
		holder.top_liege = { is_roman_ruler_trigger = yes }
	}
}

# Checks if the scoped character can form TITLE, 
# which is defined as controlling the titles defined by the creation_requirement_* variables
# and the creation_requirement_title_unformed_* titles *not* being formed
can_create_formable_title = {
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_1 } }
		trigger_if = {
			limit = { $TITLE$ = { has_variable = creation_requirement_1_alt } }
			$TITLE$ = {		# Custom description needs to be in this title scope to work properly
				custom_description = {
					text = completely_controls_creation_requirement_1_or_alt_trigger
					OR = {
						PREV = { completely_controls = $TITLE$.var:creation_requirement_1 }
						PREV = { completely_controls = $TITLE$.var:creation_requirement_1_alt }
					}
				}
			}
		}
		trigger_else = {
			completely_controls = $TITLE$.var:creation_requirement_1
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_2 } }
		trigger_if = {
			limit = { $TITLE$ = { has_variable = creation_requirement_2_alt } }
			$TITLE$ = {		# Custom description needs to be in this title scope to work properly
				custom_description = {
					text = completely_controls_creation_requirement_2_or_alt_trigger
					OR = {
						PREV = { completely_controls = $TITLE$.var:creation_requirement_2 }
						PREV = { completely_controls = $TITLE$.var:creation_requirement_2_alt }
					}
				}
			}
		}
		trigger_else = {
			completely_controls = $TITLE$.var:creation_requirement_2
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_3 } }
		trigger_if = {
			limit = { $TITLE$ = { has_variable = creation_requirement_3_alt } }
			$TITLE$ = {		# Custom description needs to be in this title scope to work properly
				custom_description = {
					text = completely_controls_creation_requirement_3_or_alt_trigger
					OR = {
						PREV = { completely_controls = $TITLE$.var:creation_requirement_3 }
						PREV = { completely_controls = $TITLE$.var:creation_requirement_3_alt }
					}
				}
			}
		}
		trigger_else = {
			completely_controls = $TITLE$.var:creation_requirement_3
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_title_unformed_1 } }
		$TITLE$ = {
			custom_description = {
				text = creation_requirement_title_unformed_1_trigger
				NOT = { this.var:creation_requirement_title_unformed_1 = { has_variable = title_created_de_jure } }
			}
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_title_unformed_2 } }
		$TITLE$ = {
			custom_description = {
				text = creation_requirement_title_unformed_2_trigger
				NOT = { this.var:creation_requirement_title_unformed_2 = { has_variable = title_created_de_jure } }
			}
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_title_unformed_3 } }
		$TITLE$ = {
			custom_description = {
				text = creation_requirement_title_unformed_3_trigger
				NOT = { this.var:creation_requirement_title_unformed_3 = { has_variable = title_created_de_jure } }
			}
		}
	}
}

# Checks if the scoped character can destroy TITLE
# which is defined as the titles defined by the creation_requirement_* variables fulfilling the trigger COUNTY_TRIGGER
# and the creation_requirement_title_unformed_* titles *not* being formed
can_destroy_formable_title = {
	completely_controls = $TITLE$.title_capital_county
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_1 } }
		$TITLE$.var:creation_requirement_1 = { $COUNTY_TRIGGER$ }
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_1_alt } }
		$TITLE$.var:creation_requirement_1_alt = { $COUNTY_TRIGGER$ }
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_2 } }
		$TITLE$.var:creation_requirement_2 = { $COUNTY_TRIGGER$ }
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_2_alt } }
		$TITLE$.var:creation_requirement_2_alt = { $COUNTY_TRIGGER$ }
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_3 } }
		$TITLE$.var:creation_requirement_3 = { $COUNTY_TRIGGER$ }
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_3_alt } }
		$TITLE$.var:creation_requirement_3_alt = { $COUNTY_TRIGGER$ }
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_title_unformed_1 } }
		$TITLE$ = {
			custom_description = {
				text = creation_requirement_title_unformed_1_trigger
				NOT = { this.var:creation_requirement_title_unformed_1 = { has_variable = title_created_de_jure } }
			}
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_title_unformed_2 } }
		$TITLE$ = {
			custom_description = {
				text = creation_requirement_title_unformed_2_trigger
				NOT = { this.var:creation_requirement_title_unformed_2 = { has_variable = title_created_de_jure } }
			}
		}
	}
	trigger_if = {
		limit = { $TITLE$ = { has_variable = creation_requirement_title_unformed_3 } }
		$TITLE$ = {
			custom_description = {
				text = creation_requirement_title_unformed_3_trigger
				NOT = { this.var:creation_requirement_title_unformed_3 = { has_variable = title_created_de_jure } }
			}
		}
	}
}

potential_integrate_kingdom_region_trigger = {
	$KINGDOM_REGION$ = { save_temporary_scope_as = kingdom_region_scope }
	$NEW_LIEGE$ = { save_temporary_scope_as = new_liege_scope }
	NOT = { scope:kingdom_region_scope = { check_kingdom_region_de_jure_liege_trigger = { DE_JURE_LIEGE = scope:new_liege_scope } } }
}

can_integrate_kingdom_region_trigger = {
	save_temporary_scope_as = scoped_character
	$KINGDOM_REGION$ = { save_temporary_scope_as = kingdom_region_scope }
	$NEW_LIEGE$ = { save_temporary_scope_as = new_liege_scope }
	switch = {
		trigger = scope:kingdom_region_scope
		title:k_londinium = {
			can_integrate_kingdom_region_region_controlled_trigger = {
				KINGDOM_REGION = title:k_londinium
				REGION = world_britannia_south_lloegyr
			}
		}
		title:k_gwynedd = {
			can_integrate_kingdom_region_region_controlled_trigger = {
				KINGDOM_REGION = title:k_gwynedd
				REGION = world_britannia_south_cymry
			}
		}
		title:k_ebrauc = {
			can_integrate_kingdom_region_region_controlled_trigger = {
				KINGDOM_REGION = title:k_ebrauc
				REGION = world_britannia_hen_ogledd
			}
		}
		fallback = {
			custom_tooltip = {
				text = error_tt
				always = no
			}
		}
	}
}

can_integrate_kingdom_region_region_controlled_trigger = {
	control_region_fraction_trigger = {
		FRACTION_REQUIRED = 0.80
		REGION = $REGION$
	}
	save_temporary_scope_value_as = { 
		name = region_name 
		value = flag:$REGION$
	}
	custom_description = {
		text = current_kingdom_region_empire_is_held_or_holds_no_territory_in_region_trigger
		object = $KINGDOM_REGION$
		$KINGDOM_REGION$.var:kingdom_region_empire = {
			save_temporary_scope_as = old_liege_title
			OR = {
				holder ?= prev
				NOT = {
					any_county_in_region = {
						region = $REGION$
						scope:old_liege_title.holder = { completely_controls = prev }
					}
				}
			}
		}
	}
}