# Used on initialization
# Saves the ancestral-most non-Latin culture that a culture is "primarily descended" from
# This is the most ancestral culture that the culture is descended from through a series of only other 
# cultures of the same heritage
# Can also be used on a Romance culture that is descended at least partly from non-Romance/Imperial cultures,
# possibly through other Romance cultures (but not through Imperial cultures)
save_ancestral_non_roman_culture_effect = {
	if = {
		limit = {
			NOT = { has_cultural_pillar = heritage_latin }
		}
		save_scope_as = current_culture
		save_ancestral_non_roman_culture_helper_effect = yes
	}
}

save_ancestral_non_roman_culture_helper_effect = {
	if = {
		limit = { has_cultural_pillar = heritage_latin }
		# Pass
	}
	else_if = {
		limit = {
			NOT = { has_cultural_pillar = heritage_romance }
		}
		if = {
			limit = { 
				NOT = { any_parent_culture = { has_same_culture_heritage = prev } }
			}
			scope:current_culture = { set_variable = { name = ancestral_non_roman_culture value = prev } }
		}
		else = {
			random_parent_culture = { 
				limit = { has_same_culture_heritage = prev }
				save_ancestral_non_roman_culture_helper_effect = yes
			}
		}
	}
	else = {
		if = {
			limit = { 
				any_parent_culture = { 
					NOR = { 
						has_cultural_pillar = heritage_romance
						has_cultural_pillar = heritage_latin
					}
				}
			}
			random_parent_culture = { 
				limit = {
					NOR = { 
						has_cultural_pillar = heritage_romance
						has_cultural_pillar = heritage_latin
					}
				}
				save_ancestral_non_roman_culture_helper_effect = yes
			}
		}
		else_if = {
			any_parent_culture = { 
				has_cultural_pillar = heritage_romance
			}
			random_parent_culture = { 
				limit = {
					has_cultural_pillar = heritage_romance
				}
				save_ancestral_non_roman_culture_helper_effect = yes
			}
		}
	}
}

get_briton_successor_culture_for_province_effect = {
	if = {
		limit = {
			OR = {
				geographical_region = btwk_world_britannia_hen_ogledd
				geographical_region = btwk_world_caledonia
				geographical_region = btwk_world_ireland_ulaid
			}
		}
		culture:cumbrian = { save_scope_as = briton_successor_culture }
	}
	else_if = {
		limit = {
			geographical_region = btwk_custom_britannia_south_coast
		}
		culture:cornish = { save_scope_as = briton_successor_culture }
	}
	else_if = {
		limit = {
			OR = {
				geographical_region = btwk_world_britannia
				geographical_region = btwk_world_ireland
			}
		}
		culture:welsh = { save_scope_as = briton_successor_culture }
	}
	else = {		# On the continent
		culture:breton = { save_scope_as = briton_successor_culture }
	}
}

# Note - includes barons
convert_unlanded_close_family_members_of_culture_effect = {
	every_close_family_member = {
		limit = {
			$CULTURE_CONDITION_LHS$ $CULTURE_CONDITION_OP$ $CULTURE_CONDITION_RHS$
			OR = {
				is_landed = no 			# Includes courtiers and landless rulers!
				highest_held_title_tier = tier_barony
			}
		}
		if = {
			limit = {
				exists = domicile.domicile_culture
				culture = domicile.domicile_culture
			}
			domicile = { set_domicile_culture = $NEW_CULTURE$ }
		}
		set_culture = $NEW_CULTURE$
	}
}

convert_unlanded_courtiers_and_guests_of_culture_effect = {
	every_courtier_or_guest = {
		limit = {
			$CULTURE_CONDITION_LHS$ $CULTURE_CONDITION_OP$ $CULTURE_CONDITION_RHS$
		}
		if = {
			limit = {
				exists = domicile.domicile_culture
				culture = domicile.domicile_culture
			}
			domicile = { set_domicile_culture = $NEW_CULTURE$ }
		}
		set_culture = $NEW_CULTURE$
	}
}

# We separate the condition into individual words to let us pass it down to other effects
# If you need a complex condition, wrap it in a scripted trigger
convert_character_with_family_and_courtiers_effect = {
	if = {
		limit = { $CULTURE_CONDITION_LHS$ $CULTURE_CONDITION_OP$ $CULTURE_CONDITION_RHS$ }
		culture = { save_scope_as = old_char_culture }
		set_culture = $NEW_CULTURE$
		convert_unlanded_close_family_members_of_culture_effect = { 
			CULTURE_CONDITION_LHS = "culture"
			CULTURE_CONDITION_OP = "="
			CULTURE_CONDITION_RHS = "scope:old_char_culture"
			NEW_CULTURE = $NEW_CULTURE$
		}
		convert_unlanded_courtiers_and_guests_of_culture_effect = {
			CULTURE_CONDITION_LHS = $CULTURE_CONDITION_LHS$
			CULTURE_CONDITION_OP = $CULTURE_CONDITION_OP$
			CULTURE_CONDITION_RHS = $CULTURE_CONDITION_RHS$
			NEW_CULTURE = $NEW_CULTURE$
		} 
	}
}

convert_county_barons_of_culture_effect = {
	every_direct_de_jure_vassal_title = {
		holder ?= {
			if = {
				limit = {
					$CULTURE_CONDITION_LHS$ $CULTURE_CONDITION_OP$ $CULTURE_CONDITION_RHS$
					highest_held_title_tier = tier_barony
				}
				set_culture = $NEW_CULTURE$
				every_courtier_or_guest = {
					limit = {
						$CULTURE_CONDITION$
					}
					if = {
						limit = {
							exists = domicile.domicile_culture
							culture = domicile.domicile_culture
						}
						domicile = { set_domicile_culture = $NEW_CULTURE$ }
					}
					set_culture = $NEW_CULTURE$
				}
			}
		}
	}
}

convert_county_and_holder_if_capital_with_family_and_courtiers_effect = {
	if = {
		limit = { $COUNTY_CULTURE_CONDITION_LHS$ $COUNTY_CULTURE_CONDITION_OP$ $COUNTY_CULTURE_CONDITION_RHS$ }
		set_county_culture = $NEW_CULTURE$
	}
	convert_county_barons_of_culture_effect = { 
		CULTURE_CONDITION_LHS = $CHAR_CULTURE_CONDITION_LHS$
		CULTURE_CONDITION_OP = $CHAR_CULTURE_CONDITION_OP$
		CULTURE_CONDITION_RHS = $CHAR_CULTURE_CONDITION_RHS$
		NEW_CULTURE = $NEW_CULTURE$
	}
	holder = {
		if = {
			limit = { capital_county = prev }
			convert_character_with_family_and_courtiers_effect = {
				CULTURE_CONDITION_LHS = $CHAR_CULTURE_CONDITION_LHS$
				CULTURE_CONDITION_OP = $CHAR_CULTURE_CONDITION_OP$
				CULTURE_CONDITION_RHS = $CHAR_CULTURE_CONDITION_RHS$
				NEW_CULTURE = $NEW_CULTURE$
			}
		}
	}
}